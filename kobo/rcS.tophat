#!/bin/sh
#
#  XCSoar Glide Computer - http://www.xcsoar.org/
#  Copyright (C) 2000-2013 The XCSoar Project
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#

PRODUCT=`/bin/kobo_config.sh`;
[ $PRODUCT != trilogy ] && PREFIX=$PRODUCT-

mount -o remount,noatime,nodiratime /dev/mmcblk0p1 /

# clean up if ACTION=="remove" of udev rule did not work
[ -d /media/usb_storage ] && rmdir /media/usb_storage

PLATFORM=freescale
if [ `dd if=/dev/mmcblk0 bs=512 skip=1024 count=1 | grep -c "HW CONFIG"` == 1 ]; then
	PLATFORM=ntx508
fi

if [ $PLATFORM == freescale ]; then
	if [ ! -s /lib/firmware/imx/epdc_E60_V220.fw ]; then
		mkdir -p /lib/firmware/imx
		dd if=/dev/mmcblk0 bs=512K skip=10 count=1 | zcat > /lib/firmware/imx/epdc_E60_V220.fw
		sync
	fi
fi

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/lib:
runlevel=S
prevlevel=N
umask 022
export PATH runlevel prevlevel
ONBOARD=/mnt/onboard
DotKobo=$ONBOARD/.kobo

for i in /proc /dev /root /tmp /sys /mnt/sd $ONBOARD /mnt/user /var/lib /var/log /var/run /lib/modules/`uname -r`; do
	[ ! -d $i ] && mkdir -p $i
done;

/bin/mount -t proc  none  /proc
/bin/mount -t tmpfs none -o size=16m /tmp
/bin/mount -t tmpfs none /dev
/bin/mount -t tmpfs none -o size=16k /var/lib
/bin/mount -t tmpfs none -o size=16k /var/log
/bin/mount -t tmpfs none -o size=128k /var/run
/bin/mount -t sysfs none -o size=500k /sys

for i in /var/run/dbus /var/lib/dbus; do
	mkdir -p $i
done

mkfifo /tmp/nickel-hardware-status
rm -rf /etc/udev/rules.d/70-persistent-net.rules

echo -e '\000\000\000\000' > /proc/sys/kernel/hotplug
/sbin/udevd -d

if [ $PLATFORM == freescale ] || [ ! -e /etc/udev.tgz ]; then
	/sbin/udevadm control --env=STARTUP=1
	/sbin/udevadm trigger
	/sbin/udevadm settle --timeout=2
	/sbin/udevadm control --env=STARTUP=
	[ $PLATFORM != freescale ] && tar cpzf /etc/udev.tgz /dev &
else
	zcat /etc/udev.tgz > /dev/null || ( rm -rf /etc/udev.tgz; reboot )
	tar zxf /etc/udev.tgz -C /
fi

( usleep 400000; /etc/init.d/on-animator.sh ) &

dosfsck -a -w /dev/mmcblk0p3
mount -t vfat -o noatime,nodiratime,shortname=mixed,utf8 /dev/mmcblk0p3 $ONBOARD
rm -rf $ONBOARD/fsck*
rm -rf $ONBOARD/FSCK*
rm -rf /usr/local/Kobo/db.tgz

echo -n 8192 > /proc/sys/vm/min_free_kbytes
echo -n 67108864 > /proc/sys/kernel/shmmax
if [ ! -e $DotKobo ]; then
	mkdir -p $DotKobo
	tar zxf /usr/local/Kobo/db.tgz -C $ONBOARD
	sync
	echo "Decompressed database"
fi

if [ -e $DotKobo/Kobo.tgz ]; then
	zcat $DotKobo/Kobo.tgz > /dev/null && tar zxf $DotKobo/Kobo.tgz -C /usr/local/Kobo/
	rm $DotKobo/Kobo.tgz
	echo "Done upgrading..."
fi
                               
if [ -e $DotKobo/KoboRoot.tgz ]; then
	zcat $DotKobo/KoboRoot.tgz > /dev/null && tar zxf $DotKobo/KoboRoot.tgz -C /
	rm $DotKobo/KoboRoot.tgz
	sync
	reboot
fi

if [ -f $DotKobo/force_uimage ] ; then
    /etc/init.d/upgrade-generic.sh null null $DotKobo/uImage-USB-hot-plug mmcblk0
    rm -f $DotKobo/force_uimage
    sync
    reboot
fi

(
	/usr/local/Kobo/pickel disable.rtc.alarm

	if [ ! -e /etc/wpa_supplicant/wpa_supplicant.conf ]; then
		cp /etc/wpa_supplicant/wpa_supplicant.conf.template /etc/wpa_supplicant/wpa_supplicant.conf
	fi

	echo 1 > /sys/devices/platform/mxc_dvfs_core.0/enable

	/sbin/hwclock -s -u
) &

INTERFACE=wlan0
WIFI_MODULE=ar6000
if [ $PLATFORM == ntx508 ]; then
	INTERFACE=eth0
	WIFI_MODULE=dhd
fi

export INTERFACE
export WIFI_MODULE

export QWS_MOUSE_PROTO="tslib_nocal:/dev/input/event1"
export QWS_KEYBOARD=imx508kbd:/dev/input/event0
export QWS_DISPLAY=Transformed:imx508:Rot90
export NICKEL_HOME=$DotKobo
export LD_LIBRARY_PATH=/usr/local/Kobo
export WIFI_MODULE_PATH=/drivers/$PLATFORM/wifi/$WIFI_MODULE.ko
export LANG=en_US.UTF-8
export UBOOT_MMC=/etc/u-boot/$PLATFORM/u-boot.mmc
export UBOOT_RECOVERY=/etc/u-boot/$PLATFORM/u-boot.recovery

/bin/dbus-uuidgen > /var/lib/dbus/machine-id
/bin/dbus-daemon --system &
export DBUS_SESSION_BUS_ADDRESS=`/bin/dbus-daemon --session --print-address --fork`

# for WiFi network
mkdir /dev/pts
/bin/mount -t devpts devpts /dev/pts
/usr/sbin/inetd /etc/inetd.conf &

# install usb drivers
cd /drivers/ntx508
rm -rf usb
if [ -f $ONBOARD/XCSoarData/kobo/start_nickel ]; then
    ln -s usb-device usb
else
    ln -s usb-host usb
fi
cd usb
/sbin/insmod core/usbcore.ko
/sbin/insmod host/ehci-hcd.ko # don't change loading order. Otherwise hang on Test Sound
/sbin/insmod serial/usbserial.ko
/sbin/insmod serial/pl2303.ko
#/sbin/insmod serial/cp210x.ko # conflict with USB audio device.
/sbin/insmod serial/ftdi_sio.ko
/sbin/insmod serial/aircable.ko
/sbin/insmod serial/garmin_gps.ko
/sbin/insmod serial/navman.ko
/sbin/insmod class/cdc-acm.ko
/sbin/insmod storage/usb-storage.ko

# install sound core
cd /drivers/ntx508/sound
/sbin/insmod core/snd-hwdep.ko
/sbin/insmod core/snd-rawmidi.ko
/sbin/insmod core/snd-timer.ko
/sbin/insmod core/snd-page-alloc.ko
/sbin/insmod core/snd-pcm.ko

# install sound usb
cd /drivers/ntx508/sound
/sbin/insmod usb/snd-usbmidi-lib.ko
/sbin/insmod usb/snd-usb-audio.ko

# load network driver
cd /drivers/ntx508/net
/sbin/insmod mii.ko
/sbin/insmod usb/usbnet.ko
/sbin/insmod usb/asix.ko

if [ -f $ONBOARD/XCSoarData/kobo/start_nickel ]; then
    rm -f $ONBOARD/XCSoarData/kobo/start_nickel
    /usr/local/Kobo/hindenburg &

    `grep /usr/local/Kobo/nickel /etc/init.d/rcS`
else
    # disable the flashing led
    echo "ch 3" > /sys/devices/platform/pmic_light.1/lit
    echo "cur 0" > /sys/devices/platform/pmic_light.1/lit
    echo "dc 0" > /sys/devices/platform/pmic_light.1/lit

    # kill off the start screen
    killall on-animator.sh

# workaround for Kobo Touch N905B kernel bug: the mxc_fb driver
# crashes when KoboMenu tries to rotate the display too early after
# boot
    if [ `dd if=/dev/mmcblk0 bs=8 count=1 skip=64` = "SN-N905B" ]; then
        sleep 1
    fi

# add link so ftp users can find XCSoarData more easily
    if ! [ -f /XCSoarData ]; then
      ln -s $ONBOARD/XCSoarData /XCSoarData;
    fi

    # launch user script
    if [ -f $ONBOARD/XCSoarData/kobo/init.sh ]; then
      source $ONBOARD/XCSoarData/kobo/init.sh
    fi

    echo 3 > /sys/class/graphics/fb0/rotate
    /opt/tophat/bin/KoboMenu 1> /dev/null 2> /dev/null &
    /sbin/udevadm control --env=STARTUP=1
    killall plug
fi
[ $PLATFORM != freescale ] && udevadm trigger &
